services:
  celery_worker:
    build: .
    command: celery -A web_scraper_app worker -l info
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      migrations:
        condition: service_completed_successfully

  celery_beat:
    build: .
    command: celery -A web_scraper_app beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/app
    env_file:
      - ./.env
    environment:
      - DJANGO_SETTINGS_MODULE=web_scraper_app.settings
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      migrations:
        condition: service_completed_successfully

  migrations:
    build: .
    command: >
      bash -c "python manage.py migrate && python web_scraper_app/models.py"
    working_dir: /app
    env_file:
      - ./.env
    environment:
      - DJANGO_SETTINGS_MODULE=web_scraper_app.settings
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: